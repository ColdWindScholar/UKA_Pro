#!/sbin/sh

OUTFD=$2
ZIP=$3
oPATH=$PATH
mkdir -p /tmp/bb/list
unzip -o "$ZIP" 'busybox' -d /tmp/bb
chmod 755 /tmp/bb/busybox
/tmp/bb/busybox --install -s /tmp/bb
export PATH=/tmp/bb:$PATH
chmod 755 /tmp/bb/*

ui_print() {
echo -n -e "ui_print $1\n" > /proc/self/fd/$OUTFD
echo -n -e "ui_print\n" > /proc/self/fd/$OUTFD
}

ui_print " "
ui_print "*********************"
ui_print "    Установка UKA"
ui_print "*********************"
ui_print " "

ui_print "- Mounting /system, /data, and rootfs"

check_mount_system="$(cat /proc/mounts | busybox awk '{ print $2 }' | busybox grep "/system" | head -1)"
if [ ! -z "$check_mount_system" ]; then
sys_mount="$check_mount_system"
if [ ! -z "$sys_mount" ]; then
mount -o rw,remount "$sys_mount"
else
ui_print " "
ui_print "Aborting! Failed to find system mountpoint!"
ui_print " "
fi
else
sys_mount="$(busybox awk '{ print $2 }' /etc/fstab | busybox grep "/system" | grep -v "/*image" | head -1)"
if [ ! -z "$sys_mount" ]; then
mount "$sys_mount"
mount -o rw,remount "$sys_mount"
else
ui_print " "
ui_print "Aborting! Failed to find system mountpoint!"
ui_print " "
fi
fi

check_mount_data="$(cat /proc/mounts | busybox awk '{ print $2 }' | busybox grep "/data" | head -1)"
if [ ! -z "$check_mount_data" ]; then
mount_data="$check_mount_data"
if [ ! -z "$mount_data" ]; then
mount -o rw,remount "$mount_data"
else
ui_print " "
ui_print "Aborting! Failed to find data mountpoint!"
ui_print " "
fi
else
mount_data="$(busybox awk '{ print $2 }' /etc/fstab | busybox grep "/data" | head -1)"
if [ ! -z "$mount_data" ]; then
mount "$mount_data"
mount -o rw,remount "$mount_data"
else
ui_print " "
ui_print "Aborting! Failed to find data mountpoint!"
ui_print " "
fi
fi

if [ -f "$sys_mount"/build.prop ]; then
sys_tem="$sys_mount"
else
	if [ -f "$sys_mount"/system/build.prop ]; then
	sys_tem="$sys_mount/system"
	else
	ui_print " "
	ui_print "Aborting! Failed to find system root!"
	ui_print " "
	fi
fi


ABI=$(cat /default.prop | grep ro.product.cpu.abi= | dd bs=1 skip=19 count=3)
ABI2=$(cat /default.prop | grep ro.product.cpu.abi2= | dd bs=1 skip=20 count=3)

ARCH=arm
if [ "$ABI" = "x86" ]; then exit 0; fi;
if [ "$ABI2" = "x86" ]; then exit 0; fi;

ui_print "- Extracting files"
rm -rf /tmp/bb/xz
busybox unzip -o "$ZIP" "bin.tar.xz" "aik.tar.xz" "binary.tar.xz" "python31.tar.xz" "gnutar" "xz" -d /tmp/bb/list
ui_print "- Pre-setting perms"
export PATH=/tmp/bb:/tmp/bb/list:$PATH
chmod -R 0755 /tmp/bb/list

ui_print "- Moving files to /system, /data"

#/tmp/bb/list/gnutar -xJf /tmp/bb/list/python39.tar.xz -C /data/local
mkdir /data/local/python
/tmp/bb/list/gnutar -xJf /tmp/bb/list/python.tar.xz -C /data/local/python
/tmp/bb/list/gnutar -xJf /tmp/bb/list/aik.tar.xz -C /data/local
/tmp/bb/list/gnutar -xJf /tmp/bb/list/binary.tar.xz -C /data
#/tmp/bb/list/gnutar -xJf /tmp/bb/list/lib.tar.xz -C $sys_tem
/tmp/bb/list/gnutar -xJf /tmp/bb/list/bin.tar.xz -C $sys_tem

ui_print "- Unmounting /system and /data"
cd
umount system
umount system_root
umount data
if [ -e $oPATH ]; then
PATH=$oPATH
fi

ui_print "- Cleaning up!"
rm -rf /tmp/bb

ui_print "- Done !"
exit 0
