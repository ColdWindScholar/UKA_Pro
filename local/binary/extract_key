#!/system/bin/sh

 #clear
 if [ "$aik_mob" == "1" ]; then
out_extract_key=/data/local/AIK-mobile/split_img
elif [ "$aik_mob" == "2" ]; then
out_extract_key="$dir_avb"/"$r_name"
aik_mob="1"
else
out_extract_key=/data/local/UnpackerSystem/extract_keys
busybox mkdir "$out_extract_key" 2> /dev/null

fi

if busybox test -s "$file"; then
if busybox test ! -z "$(avbtool info_image --image "$file" 2> /dev/null | busybox grep -o "Minimum libavb version:")"; then
check_alg="$(avbtool info_image --image "$file" 2> /dev/null | busybox awk '/^Algorithm:/ { print $2 }')"

if [ "$check_alg" != "NONE" -a ! -z "$check_alg" ]; then
 echo 
 echo ".....Algorithm: $check_alg"

#f_name="$(echo "$file" | busybox awk -F"." '{ print $1 }')"

 r="$(busybox basename $file)"
 f_name=${r%.*}
 
 #offset_avb="$(bin_utils foffset "$file" "41564230" -1 true)"
 
 offset_avb="$(python31 /data/local/binary/bin_system/find_avb0.py "$file" "41564230" | busybox head -1)"
 
if busybox test ! -z "$offset_avb"; then

 size_magic="$(avbtool info_image --image "$file" | busybox awk '/Header Block:/ { print $3 }')"

 size_ayten="$(avbtool info_image --image "$file" | busybox awk '/Authentication Block:/ { print $3 }')"

 xxx="$(busybox expr "$offset_avb" \+ 64)"

 #offset_key="$(busybox printf "%d\n" "0x""$(xxd -ps -s "$xxx" -l 8 "$file")")"
 
 #offset_key="$(busybox printf "%d\n" "0x""$(busybox hexdump -C -s "$xxx" -n 8 "$file" | busybox awk 'NR==1 { print $2$3$4$5$6$7$8$9 }')")"
 
 offset_key="$(busybox printf "%d\n" "0x""$(busybox dd if="$file" ibs=1 skip="$xxx" bs=1 count=8 2> /dev/null | xxd -p)")"

 xxx="$(busybox expr "$offset_avb" \+ 72)"

 #size_key="$(busybox printf "%d\n" "0x""$(xxd -ps -s "$xxx" -l 8 "$file")")"
 
 #size_key="$(busybox printf "%d\n" "0x""$(busybox hexdump -C -s "$xxx" -n 8 "$file" | busybox awk 'NR==1 { print $2$3$4$5$6$7$8$9 }')")"
 
 size_key="$(busybox printf "%d\n" "0x""$(busybox dd if="$file" ibs=1 skip="$xxx" bs=1 count=8 2> /dev/null | xxd -p)")"

 real_offset_key="$(busybox expr "$offset_avb" \+ "$size_magic" \+ "$size_ayten" \+ "$offset_key")"
 
 #xxd -ps -s "$real_offset_key" -l "$size_key" "$file" | xxd -r -ps > "$out_extract_key"/"$f_name"_pubkey.pem
 
busybox dd if="$file" ibs=1 skip="$real_offset_key" of="$out_extract_key"/"$f_name"_pubkey.pem bs=1 count="$size_key" &>/dev/null

 if [ $(echo $?) -eq 0 -a -s "$out_extract_key"/"$f_name"_pubkey.pem ]; then
 if [ "$aik_mob" != "1" ]; then
 echo
 echo ".....Ключ успешно извлечён!"
 echo ".....Сохранено: "$out_extract_key"/"$f_name"_pubkey.pem"
 sha_sum="$(busybox sha1sum "$out_extract_key"/"$f_name"_pubkey.pem | busybox awk '{ print $1 }')"
 echo ".....sha1:  $sha_sum"
 echo
 else
 #echo
 sha_sum="$(busybox sha1sum "$out_extract_key"/"$f_name"_pubkey.pem | busybox awk '{ print $1 }')"
 echo ".....sha1 public key:  $sha_sum"
 echo
fi
else
echo ".....Ошибка при извлечении ключа!"
echo
fi
else
echo
echo ".....Ошибка, не найден offset AVB0"
echo
fi
else
 if busybox test "$aik_mob" != "1"; then
 echo
 echo ".....Файл /$nd/$file не подписан!"
 echo
fi
fi
else
r="$(busybox realpath "$file")"
echo
echo ".....Файл $r не имеет структуры AVB"
echo
fi
else
echo
echo ".....Нет файла для обработки!"
echo
fi

 unset xxx
 unset aik_mob
