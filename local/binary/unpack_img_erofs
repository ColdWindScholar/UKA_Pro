#!/system/bin/sh

 nd=$nd
 file="$file"
 mkdir -p erofs/config 2> /dev/null

 r="$(busybox basename $file)"
 f_name=${r%.*}
 #r_name=$(echo $file | busybox sed 's!.*\/!!' | busybox awk -F"-|[+]|[.]|[{]|[(]" '{ print $1 }')
 r_name=$(echo $file | busybox sed 's!.*\/!!' | busybox awk -F"[.]" '{ print $1 }')
 config="config/$r_name"
 parts="$(echo "$r" | busybox grep -o "PARTITION")"
 exten=${r##*.}




 super_dir=/data/local/UnpackerSuper
opla=$(busybox hexdump -C -n 20000 "$file" | busybox grep -o "30 50 4c 41")
 erofs="$(busybox hexdump -C -n 2000 "$file" | busybox grep -o 'e2 e1 f5 e0')"
 sparse_super=$(busybox hexdump -C -n 20000 "$file" | grep -o "3a ff 26 ed")

 gg()
{
 cd /data/local/UnpackerSystem/erofs
 busybox find "$r_name" -type f | busybox grep [[:space:]] | while read a; do
 if [ ! -z "$(echo ${a##*/} | busybox grep [[:space:]])" ]; then
 ff="${a%\/*}"/"$(echo ${a##*/} | busybox sed 's! !_!g')"
 busybox mv "$a" "$ff"
 fi
 done

 busybox find "$r_name" -type d | busybox grep [[:space:]] | while read a; do
 if [ ! -z "$(echo ${a##*/} | busybox grep [[:space:]])" ]; then
 ff="${a%\/*}"/"$(echo ${a##*/} | busybox sed 's! !_!g')"
 busybox mv "$a" "$ff"
 fi
 done

while read b; do
 u=$(busybox grep -o "$b" "$config"/"$r_name"_fs_config)
 n=$(echo "$b" | busybox sed 's! !_!g')
if [ ! -z "$u" ]; then
 busybox sed -i "s!$u!$n !" "$config"/"$r_name"_fs_config
fi
done< "$config"/"$r_name"_space.txt

while read b; do
 w=$(echo "$b" | busybox sed 's!\.!\\\\\.!g')
 u=$(busybox grep "$w " "$config"/"$r_name"_file_contexts)
 n=$(echo "$w" | busybox sed -e 's! !_!g; s!\.!\\.!g')
 
if [ ! -z "$u" ]; then
 busybox sed -i "s!${w}!${n}!" "$config"/"$r_name"_file_contexts
fi
done< "$config"/"$r_name"_space.txt


#>"$config"/"$r_name"_space_contexts.txt

 #busybox cat "$config"/"$r_name"_space.txt | while read b; do
 #w="$(echo "$b" | busybox sed 's!\.!\\\\\.!g')"
 #u="$(busybox grep "$w " "$config"/"$r_name"_file_contexts)"
#if [ ! -z "$u" ]; then
 #v="$(busybox cat "$config"/"$r_name"_file_contexts | busybox grep -n "$w " | busybox awk -F":" '{ print $1 }')"
 #busybox sed -i ${v}d "$config"/"$r_name"_file_contexts
 #echo "$u" >> "$config"/"$r_name"_space_contexts.txt
 #echo "$u" | busybox sed 's! !_!g' | busybox sed 's!_u:object! u:object!' >> "$config"/"$r_name"_file_contexts
#fi
#done



#busybox cat "$config"/"$r_name"_space_contexts.txt | busybox sed 's! !_!g' | busybox sed 's!_u:object! u:object!' >> "$config"/"$r_name"_file_contexts

busybox find "$r_name" -type d | busybox sed 's!$!_d!' > "$config"/"$r_name"_f.txt
busybox find "$r_name" -type f | busybox sed 's!$!_f!' >> "$config"/"$r_name"_f.txt
busybox find "$r_name" -type l | busybox sed 's!$!_l!' >> "$config"/"$r_name"_f.txt


busybox find "$r_name" -type d -exec busybox stat -c '%N %u %g %a' {} \; | busybox sed 's!$! _d!' > "$config"/"$r_name"_avto_f.txt
busybox find "$r_name" -type f -exec busybox stat -c '%N %u %g %a' {} \; | busybox sed 's!$! _f!' >> "$config"/"$r_name"_avto_f.txt
busybox find "$r_name" -type l -exec busybox stat -c '%N %u %g %a' {} \; | busybox sed 's!$! _l!' | busybox sed -e s!\'!!g >> "$config"/"$r_name"_avto_f.txt
}

 cd /data/local/UnpackerSystem/erofs
 echo
 echo ".....Удаление старой папки \""$r_name"\" и файлов конфигурации..."

 find -maxdepth 1 -name "$r_name" -type d | xargs rm -rf
 
 if [ -f "$r_name" ]; then
 echo
 echo ".....Внимание! Имя файла: "$PWD"/"$r_name" уже существует"
 echo ".....Переименовываем "$r_name" в "$r_name".real.img"
 echo
 busybox mv -f "$r_name" "$r_name".real.img
 fi

 rm -f ./fs_config ./file_contexts
 rm -rf "$config"
 
if [ -f "$file" ]; then
 echo
 echo ".....Распаковка ${file}..."
 echo
 rm -f config/exception.log
 if [ ! -z "$(getprop ro.product.cpu.abilist64)" ]; then
 mkfs="mkfs.erofs"
 extract.erofs64 -x -f -i "$file" 1>/dev/null
 #fsck.erofs --force --extract="$r_name" "$file"
 
 #extract.erofs64 -x --only-cfg -i "$file"
 
 else
 mkfs="mkfs.erofs32"
 extract.erofs -x -f -i "$file" 1>/dev/null
 fi

if [ $(echo $?) -eq "0" -a ! -s config/exception.log ]; then
 mkdir -p "$config"
 busybox mv -f config/"$r_name"_file_contexts config/"$r_name"/"$r_name"_file_contexts
 busybox mv -f config/"$r_name"_fs_config config/"$r_name"/"$r_name"_fs_config
 busybox mv -f config/"$r_name"_fs_options config/"$r_name"/"$r_name"_fs_options
 
  echo "$f_name" > /data/local/UnpackerSystem/erofs/"$config"/"$r_name"_name.txt
  
  busybox expr $(busybox du -s "$r_name" | busybox awk '{ print $1 }') \* 1024 > "$config"/"$r_name"_size.txt
  
  size_basic="$(busybox cat "$config"/"$r_name"_size.txt)"
  
  echo make_ext4fs -J -T -1 -S ./file_contexts -C ./fs_config -l "$size_basic" -a /"$r_name" '$outdir'/"$r_name".new.img $r_name > "$config"/"$r_name"_pack.sh
  
  echo make_ext4fs -s -J -T -1 -S ./file_contexts -C ./fs_config -l "$size_basic" -a /"$r_name" '$outdir'/"$r_name".new.img $r_name > "$config"/"$r_name"_pack_sparse.sh
  
  
#a="--fs-config-file=./"$config"/"$r_name"_fs_config"
#b="--file-contexts=./"$config"/"$r_name"_file_contexts"
#c='$outdir'/"$r_name".new.img
#busybox cat "$config"/"$r_name"_fs_options | busybox grep "mkfs.erofs" | busybox awk -F "options:       " '{ print "mkfs.erofs"$2 }' | busybox awk -v a="$a" -v b="$b" -v c="$c" '{ print $1" "$2" "$3" "$4" "$5" "$6" "$7" "a" "b" "c" "$11}' > "$config"/"$r_name"_pack_erofs.sh

#busybox cat "$config"/"$r_name"_fs_options | busybox grep "mkfs.erofs" | busybox awk -F "options:" '{ print "mkfs.erofs"$2 }' | busybox awk -v a="--fs-config-file=./"$config"/"$r_name"_fs_config" -v b="--file-contexts=./"$config"/"$r_name"_file_contexts" -v c='$outdir'/"$r_name".new.img '{ print $1" "$2" -E^xattr-name-filter "$3$4" "$5$6" "$7" --product-out=./ "a" "b" "c" "$11}' > "$config"/"$r_name"_pack_erofs.sh


 line_pack="$(busybox cat "$config"/"$r_name"_fs_options | busybox grep "mkfs.erofs")"

 z="$(echo "$line_pack" | busybox awk '{ print $3 }')"
 t="$(echo "$line_pack" | busybox awk '{ print $5 }')"
 u="$(echo "$line_pack" | busybox awk '{ print $7 }')"

 echo "$mkfs" "$z" -E^xattr-name-filter -T"$t" -U"$u" --mount-point=/"$r_name" --product-out=./ --fs-config-file=./"$config"/"$r_name"_fs_config --file-contexts=./"$config"/"$r_name"_file_contexts '$outdir'/"$r_name".new.img ./"$r_name" > "$config"/"$r_name"_pack_erofs.sh
 
 busybox cat "$config"/"$r_name"_fs_options | busybox awk '/Filesystem UUID:/ { print $3 }' > "$config"/"$r_name"_uuid.txt



  

 if [ -d ./"$r_name" -a -s "$config"/"$r_name"_fs_config ]; then
busybox sed -i '/logd / s!0x4000040000040!0x440000040!' "$config"/"$r_name"_fs_config
busybox find "$r_name" -type d | busybox sed 's!$!_d!' > "$config"/"$r_name"_f.txt
busybox find "$r_name" -type f | busybox sed 's!$!_f!' >> "$config"/"$r_name"_f.txt
busybox find "$r_name" -type l | busybox sed 's!$!_l!' >> "$config"/"$r_name"_f.txt


busybox find "$r_name" -type d -exec busybox stat -c '%N %u %g %a' {} \; | busybox sed 's!$! _d!' > "$config"/"$r_name"_avto_f.txt
busybox find "$r_name" -type f -exec busybox stat -c '%N %u %g %a' {} \; | busybox sed 's!$! _f!' >> "$config"/"$r_name"_avto_f.txt
busybox find "$r_name" -type l -exec busybox stat -c '%N %u %g %a' {} \; | busybox sed 's!$! _l!' | busybox sed -e s!\'!!g >> "$config"/"$r_name"_avto_f.txt

 if [ ! -z "$(busybox find "$r_name" -type l)" ]; then
 busybox find "$r_name" -type l | busybox xargs busybox tar -cf "$config"/"$r_name"_sim.tar
 fi
else
 echo 
 echo ".....Error! Нет распакованной папки или "$config"/"$r_name"_fs_config."
 fi


 h=$(busybox find "$r_name" | busybox grep [[:space:]])

 vv="$r_name"

 check_sar()
{
 if [ -f "$vv/system/build.prop" ]; then
 #echo "$sar"
 sar=true
 return 0
 else
 sar=false
 return 1
 fi
}
 check_sar
 

 >"$config"/"$r_name"_gg_d.txt
busybox find "$vv" -maxdepth 1 ! -path 'lost+found' -a ! -path "$vv" -type d | while read a; do
echo
busybox find "$a" ! -path 'lost+found' -a ! -path "$vv" -type d | busybox xargs busybox stat -c '%N %u %g %a' 2> /dev/null | busybox awk -F"/" '!($1 $2 $3 in a) {a[$1 $2 $3];print}'
done >> "$config"/"$r_name"_gg_d.txt



 >"$config"/"$r_name"_tmp_f.txt
busybox find "$vv" -maxdepth 1 ! -path 'lost+found' -type d | while read a; do
echo
busybox find "$a" ! -path 'lost+found' -type f | busybox xargs busybox stat -c '%N %u %g %a' 2> /dev/null
done >> "$config"/"$r_name"_tmp_f.txt
cat "$config"/"$r_name"_tmp_f.txt | busybox awk '!($0 in a) {a[$0];print}' > "$config"/"$r_name"_gg_f.txt && rm -f "$config"/"$r_name"_tmp_f.txt


 #new
 contet()
{
 >"$config"/"$r_name".txt
 busybox find ./"$r_name" -maxdepth 1 -type d | sed 's!\.!!' | while read a; do
a="$(echo "$a" | busybox sed 's!\.!\\\\\.!g')"
 busybox grep "$a " "$config"/"$r_name"_file_contexts | busybox awk '{ print $2 }' >> "$config"/"$r_name".txt
 done
rrrr_name="$(echo "$r_name" | busybox sed 's!\.!\\\\\.!g')"
 con_nosar="$(cat "$config"/"$r_name".txt | sort | busybox uniq -c | busybox sort -nk1 | busybox tail -1 | busybox awk '{print $2}')"
 real_name="/${rrrr_name}(/.*)? "

 if [ ! -z "$(echo "$rrrr_name" | busybox grep "^persist")" ]; then
real_con="/${rrrr_name}(/.*)? u:object_r:persist_data_file:s0"
 else
 real_con="/${rrrr_name}(/.*)? ${con_nosar}"
 fi
 if [ -z "$(busybox grep "^$real_name" "$config"/"$r_name"_file_contexts)" ]; then
 i=1
 busybox sed -i -e "$i s!^!${real_con}\n!" "$config"/"$r_name"_file_contexts
 if [ $(echo $?) -eq 0 ]; then
 echo ".....Запись в \"${r_name}_file_contexts\"..."
 fi
 fi
 busybox rm -f "$config"/"$r_name".txt
 return
}

 con_sar()
{
 con_name="$(echo "${r_name}" | busybox sed 's!\.!\\\\\.!g')"
 con1="/${con_name}/"
 con2="/${con_name}(/.*)? "
 con3="/${con_name}/system(/.*)? "
 
 if [ -z "$(busybox grep "^${con1} " "$config"/"${r_name}"_file_contexts)" ]; then
 con1="/${con_name}/ u:object_r:rootfs:s0"
 i=1
 busybox sed -i -e "$i s!^!${con1}\n!" "$config"/${r_name}_file_contexts
 fi
 if [ -z "$(busybox grep "^${con2}" "$config"/"${r_name}"_file_contexts)" ]; then
 con2="/${con_name}(/.*)? u:object_r:rootfs:s0"
 i=2
 busybox sed -i -e "$i s!^!${con2}\n!" "$config"/${r_name}_file_contexts
 fi
 if [ -z "$(busybox grep "^${con3}" "$config"/"${r_name}"_file_contexts)" ]; then
 con3="/${con_name}/system(/.*)? u:object_r:system_file:s0"
 i=3
 busybox sed -i -e "$i s!^!${con3}\n!" "$config"/${r_name}_file_contexts
 fi
 return 0
}

    str_avb()
{
 base_dir=/data/local/UnpackerSystem/erofs
 img_name=$(cat /data/local/UnpackerSystem/erofs/"$config"/"$r_name"_name.txt)

 #busybox awk '!($0 in a) {a[$0];print}' "$base_dir"/"$config"/"$r_name"_file_contexts > "$base_dir"/"$config"/"$r_name"_file_contexts.tmp && busybox mv -f "$base_dir"/"$config"/"$r_name"_file_contexts.tmp "$base_dir"/"$config"/"$r_name"_file_contexts
 
 
busybox cat "$base_dir"/"$config"/"$r_name"_f.txt | busybox grep "_d$" | busybox sed 's!_d$!!' | while read x; do
x="$(echo "$x" | busybox sed 's!\.!\\\\.!g')"
busybox cat "$base_dir"/"$config"/"$r_name"_file_contexts | busybox grep "^/$x " | busybox grep -v "/ " | busybox awk '{ print $1"(/.*)?"" "$2 }2'
done >> "$base_dir"/"$config"/"$r_name"_file_contexts
busybox cat "$base_dir"/"$config"/"$r_name"_file_contexts | busybox sort -u > "$base_dir"/"$config"/a.txt && busybox mv -f "$base_dir"/"$config"/a.txt "$base_dir"/"$config"/"$r_name"_file_contexts


 
 if [ "$sar" == "true" ]; then
 if [ -f "$base_dir"/${r_name}/system/etc/selinux/plat_file_contexts ]; then
 busybox cp "$base_dir"/${r_name}/system/etc/selinux/plat_file_contexts "$base_dir"/"$config"/${r_name}_file_contexts_orig && sed -i "s!^/!/${r_name}/!" "$base_dir"/"$config"/${r_name}_file_contexts_orig
 fi

 con_sar #функция для SAR

 echo ".....Detected image \"System as Root\""
 

 elif [ "$sar" == "false" ]; then

 echo ".....Detected image not \"System as Root\""
 contet #функция для не SAR
 fi

  dir_avb=/data/local/UnpackerSystem/erofs/config
  
 q="$(busybox basename $file)"
 file_exten_raw="$(echo "$img_name" | busybox grep -o "raw$")"
 file_exten_avb=${q##*.}
 if [ "$file_exten_avb" == "PARTITION" -a -z "$file_exten_raw" ]; then
 file_avb="/$nd"/"$img_name".PARTITION
 elif [ "$file_exten_avb" == "win" -a -z "$file_exten_raw" ]; then
 file_avb="/$nd"/"$img_name".win
 else
 file_avb="/$nd"/"$img_name".img
 fi


 full_avb="$(avbtool info_image --image "$file_avb" 2> "$dir_avb"/"$r_name"/"$r_name"_avb.log)"
 
 if [ ! -z "$(echo "$full_avb" | grep -Eo "Image Size:|VBMeta offset:")" ]; then
 
 echo "$full_avb" | busybox awk '/Partition Name:/ { print $3 }' > "$dir_avb"/"$r_name"/"$r_name"_part_name.txt
 echo "$full_avb" > "$dir_avb"/"$r_name"/"$r_name"_avb.img
 echo
 echo ".....Обнаружена структура AVB!"

if busybox test -s "$dir_avb"/"$r_name"/"$r_name"_avb.img; then

 aik_mob="2"

 . /data/local/binary/extract_key "$file_avb"

 echo 'make_ext4fs -J -T -1 -S ./file_contexts -C ./fs_config -l "$size_avb" -a /"$pack_d" "$outdir"/"$pack_d".new.img $pack_d' > "$dir_avb"/"$r_name"/"$r_name"_pack_avb.sh
 
 echo 'make_ext4fs -s -J -T -1 -S ./file_contexts -C ./fs_config -l "$size_avb" -a /"$pack_d" "$outdir"/"$pack_d".new.img $pack_d' > "$dir_avb"/"$r_name"/"$r_name"_pack_avb_sparse.sh

 else
 echo
 echo ".....Ошибка при создании фвйла конфигурации!"
 echo
 fi
 elif [ ! -z "$(cat "$dir_avb"/"$r_name"/"$r_name"_avb.log | busybox grep -Eo "Given image does")" ]; then
 echo > /dev/null
 else
 echo
 echo ".....Ошибка при обнаружении AVB!"
 echo
 fi
 return
}
 str_avb
 
 if busybox test -s "$config"/"$r_name"*_space.txt; then
 echo
 echo ".....В образе "${file}" есть файлы с пробелами... исправлено, сохранено в "$base_dir"/"$config"/"$r_name"_space.txt!"
 echo
 fi

 if [ ! -z "$h" ]; then
 echo
 echo -e "\033[33;1m.....Успешно распаковано! \033[0m"
 echo
 echo "...В образе "${file}" есть файлы с пробелами, исправляем..."
 echo "$h" > "$config"/"$r_name"_space.txt
 
 gg
 

if [ $(echo $?) -eq 0 ] ; then
busybox find "$r_name" -type l | busybox xargs busybox tar -cf "$config"/"$r_name"_sim.tar 2> /dev/null
echo
echo "...Исправлено, сохранено в "$config"/"$r_name"_space.txt"
#echo "...Исправлено, сохранено в "$config"/"$r_name"_space_contexts.txt"
echo
else
echo
echo "...Ошибка исправления файлов с пробелами!"
echo
fi
else
 echo
 echo -e "\033[33;1m.....Успешно распаковано! \033[0m"
echo
fi
else

echo
echo -e "\033[31;47;1m ...error: Ошибка! Некорректное извлечение файлов
 Папка /data/local/UnpackerSystem/erofs/$r_name будет недоступна для сборки!             \033[0m"
echo
 busybox rm -rf "$config" config/"$r_name"_fs_config config/"$r_name"_file_contexts config/"$r_name"_fs_options
fi
else
echo
echo ".....Образа "$file", нет в папке: /data/local/UnpackerSystem."
echo
 fi
